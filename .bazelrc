# =====================================================================
# Envoy specific Bazel build/test options.
# Keep envoy.bazelrc up-to-date by run:
# curl -sSL https://raw.githubusercontent.com/envoyproxy/envoy/master/.bazelrc > envoy.bazelrc
# =====================================================================
import envoy.bazelrc

# Overrides workspace_status_command
build --workspace_status_command=tools/bazel_get_workspace_status

# Additional config combination based on envoy bazelrc
build:remote-clang-libc++ --config=remote
build:remote-clang-libc++ --config=rbe-toolchain-clang-libc++

build:remote-gcc --config=remote
build:remote-gcc --config=rbe-toolchain-gcc

build:docker-clang-libc++ --config=docker-sandbox
build:docker-clang-libc++ --config=rbe-toolchain-clang-libc++

build:docker-gcc --config=docker-sandbox
build:docker-gcc --config=rbe-toolchain-gcc

# ========================================
# Istio specific Bazel build/test options.
# ========================================

# Enable path normalization by default.
# See: https://github.com/envoyproxy/envoy/pull/6519
build --define path_normalization_by_default=true

# Build with embedded V8-based WebAssembly runtime.
build --define wasm=v8

# Build Proxy-WASM plugins as native extensions.
build --copt -DNULL_PLUGIN

# Release builds without debug symbols.
build:release -c opt
build:release --strip=always

# Release builds with debug symbols
build:release-symbol -c opt

# Debug builds
build:debug -c dbg

# Add compile option for all C++ files
build --cxxopt -Wnon-virtual-dtor
build --cxxopt -Wformat
build --cxxopt -Wformat-security

# Envoy repo overrides from the environment.
build --action_env=ENVOY_REPOSITORY
build --action_env=ENVOY_SHA
build --action_env=ENVOY_SHA256
build --action_env=ENVOY_PREFIX
